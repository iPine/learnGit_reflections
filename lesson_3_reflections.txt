何时你会想使用远程版本库，而不是将所有工作保存在本地？
与他人协作完成项目时，需要使用远程版本库托管代码；每个团队成员都可以互不干涉地负责各自的分支，也可以获取项目的最新版本。


为何你希望始终手动地拉取更改，而不是让 Git 自动与你的远程版本库保持同步？
因为在同步之前，我需要确认哪些更改是必要的哪些是不必要。


说明Fork、克隆和分支之间的不同。何时使用某种功能而不是另一种？
Fork是指再github上的类似于clone的操作，能显示某个仓库被fork了多少次。Clone是指从远程克隆仓库到计算机本地或者在计算机本地从一个地方克隆到另一个地方。Branch是多人协作或者需要实现一些实验性features时使用的策略。


拥有远程分支的上次已知状态的副本（存储在本地）有何好处？
当产生协作冲突时，可以利用本地副本来解决冲突。
- git fetch origin
- git merge master origin/master


如何在不使用 Git 或 GitHub 的情况下开展协同？哪种做法更容易？哪种做法更困难？
不使用Git或者github的情况下协同工作，每个成员copy一份最开始的代码，然后各自完成复杂的功能代码，然后需要定期手动合并和更新代码。使用 Git 或 GitHub 的情况更为容易。


何时你会想在独立的分支中而不是直接在 master 中进行更改？两种方法各有何好处？
与他人进行协同工作时，会想再独立的分支中进行更改，若多人同时对相同代码进行了改动，直接在master中进行更改不能将他人push到远程仓库的代码更新到本地，也不利于解决协作冲突。